//
// Created by Ïù¥Ï£ºÌù¨ on 25. 5. 7.
//
#include <iostream>
#include <string>
#include <unistd.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
using namespace std;
int main(){
    int listenSocket = socket(AF_INET, SOCK_STREAM, 0);
    if (listenSocket < 0) {
        perror("socket");
        exit(1);
    }
    cout<<"ÏÉùÏÑ± ÏÑ±Í≥µ"<<endl;
    struct sockaddr_in address = {};
    address.sin_family = AF_INET;
    address.sin_addr.s_addr = htonl(INADDR_ANY);
    address.sin_port = htons(12345);
    if (::bind(listenSocket,(struct sockaddr *)&address, sizeof(address)) < 0)//::Îäî functionalÍ≥º Ìó∑Í∞àÎ¶º Î∞©ÏßÄ
    {
        perror("bind");
        exit(1);
    }
    cout<<"Î∞îÏù∏Îî© ÏÑ±Í≥µ"<<endl;
    if (::listen(listenSocket, 5) < 0) {
        perror("listen");
        exit(1);
    }
    cout<<"Ïó∞Í≤∞ ÎåÄÍ∏∞ ÏÑ±Í≥µ!"<<endl;
    ::listen(listenSocket, 5);
    int clientSocket = ::accept(listenSocket, nullptr, nullptr);
    if (clientSocket<0) {
        perror("accept");
        exit(1);
    }
    char clientIP[INET_ADDRSTRLEN]; //ipÏ£ºÏÜå Ï†ÄÏû•
    inet_ntop(AF_INET, &(address.sin_addr), clientIP, INET_ADDRSTRLEN);
    int clientPort = ntohs(address.sin_port);
    cout << "üåê ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ Ïó∞Í≤∞Îê®!" << endl;
    cout << "IP Ï£ºÏÜå: " << clientIP << endl;
    cout << "Ìè¨Ìä∏ Î≤àÌò∏: " << clientPort << endl;

    const char *msg = "ÏïàÎÖïÌïòÏÑ∏Ïöî ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Îãò!\n";
    send(clientSocket, msg, strlen(msg), 0);

    char buffer[1024];
    ssize_t bytesRead=recv(clientSocket, buffer, sizeof(buffer)-1, 0);
    if (bytesRead<0) {
        perror("recv");
        exit(1);
    }
    buffer[bytesRead] = '\0';
    cout<<"Î∞õÏùÄ Î©îÏãúÏßÄ: "<<buffer<<endl;

    close(clientSocket);
    close(listenSocket);
    return 0;
}